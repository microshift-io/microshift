name: release-rpms-and-images
description: Workflow to build and release MicroShift RPMs and container images

on:
  workflow_dispatch:
    inputs:
      ushift-branch:
        default: "main"
        description: MicroShift branch from https://github.com/openshift/microshift/branches
        type: string
      okd-version-tag:
        default: "4.21.0-okd-scos.ec.5"
        description: OKD version tag from https://quay.io/repository/okd/scos-release?tab=tags
        type: string
      copr-repo:
        default: pmtk0/test123
        description: COPR repository name
        type: string

jobs:
  build:
    strategy:
      matrix:
        # The ARM runner is disabled because OKD images for ARM are not available.
        # See USHIFT-5570
        runners: [ubuntu-24.04]
    name: Build MicroShift upstream
    runs-on: ${{ matrix.runners }}
    steps:
      - name: Check out MicroShift upstream repository
        uses: actions/checkout@v4

      - name: Prepare the build and run environment
        uses: ./.github/actions/prebuild

      - name: Build MicroShift RPMs
        shell: bash
        env:
          COPR_TOKEN: |
            ${{ secrets.COPR_TOKEN }}
        run: |
          cd ${GITHUB_WORKSPACE}/
          echo "${COPR_TOKEN}" > /tmp/copr-token
          make copr-rpm \
            USHIFT_BRANCH=${{ inputs.ushift-branch }} \
            OKD_VERSION_TAG=${{ inputs.okd-version-tag }} \
            RPM_OUTDIR=/mnt/rpms \
            COPR_CONFIG=/tmp/copr-token \
            COPR_REPO_NAME="${{ inputs.copr-repo }}"

      - name: Build and test bootc image
        uses: ./.github/actions/build
        with:
          ushift-branch: ${{ inputs.ushift-branch }}
          okd-version-tag: ${{ inputs.okd-version-tag }}
          build: bootc-image
          rpm-builder: microshift-copr-builder

      # - name: Build MicroShift bootc container image
      #   if: contains(fromJSON('["all", "bootc-image"]'), inputs.build)
      #   shell: bash
      #   run: |
      #     cd ${GITHUB_WORKSPACE}/

      #     # Adjust the make options based on the inputs
      #     make_opts=()
      #     [ "${{ inputs.isolated-network }}" = "1" ] && make_opts+=("EMBED_CONTAINER_IMAGES=1")
      #     [ "${{ inputs.ovnk-networking }}"  = "1" ] && make_opts+=("WITH_KINDNET=0")

      #     make image \
      #       BOOTC_IMAGE_URL=quay.io/centos-bootc/centos-bootc \
      #       BOOTC_IMAGE_TAG=stream9 \
      #       BUILDER_IMAGE=microshift-copr-builder \
      #       ${make_opts[@]}

      # - name: Run a test to verify that MicroShift is functioning properly
      #   if: contains(fromJSON('["all", "bootc-image"]'), inputs.build)
      #   shell: bash
      #   run: |
      #     # See https://github.com/microshift-io/microshift/blob/main/docs/run.md
      #     # for more information about the run process.

      #     # Adjust the make options based on the inputs
      #     make_opts=()
      #     [ "${{ inputs.isolated-network }}" = "1" ] && make_opts+=("ISOLATED_NETWORK=1")

      #     # Run the MicroShift container
      #     make run ${make_opts[@]}

      #     # Verify that Internet access is not available in the container
      #     # when the isolated network is enabled
      #     if [ "${{ inputs.isolated-network }}" = "1" ]; then
      #       for cmd in "ping -c1 8.8.8.8" "curl -I quay.io" "curl -I ghcr.io"; do
      #         if sudo podman exec -i microshift-okd ${cmd} ; then
      #           echo "ERROR: Internet access is available in the isolated network container"
      #           exit 1
      #         fi
      #       done
      #     fi

      #     # Wait until the MicroShift service is ready and healthy
      #     make run-ready
      #     make run-healthy

      #     # Stop the MicroShift container
      #     make stop

      - name: COPR - Delete builds
        if: failure()
        shell: bash
        env:
          COPR_TOKEN: |
            ${{ secrets.COPR_TOKEN }}
        run : |
          echo "${COPR_TOKEN}" > /tmp/copr-token
          make copr-delete-builds \
            COPR_CONFIG=/tmp/copr-token \
            COPR_BUILDS="$(cat /mnt/rpms/builds.txt)"

      - name: COPR - Regenerate RPM repo
        shell: bash
        env:
          COPR_TOKEN: |
            ${{ secrets.COPR_TOKEN }}
        run : |
          echo "${COPR_TOKEN}" > /tmp/copr-token
          make copr-regenerate-repos \
            COPR_CONFIG=/tmp/copr-token \
            COPR_REPO_NAME="${{ inputs.copr-repo }}"

      - name: Login to GitHub Container Registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          auth_file_path: /tmp/ghcr-auth.json

      - name: Publish Bootc image
        id: publish-bootc-image
        shell: bash
        run: |
          VERSION="$(cat /mnt/rpms/version.txt)"
          sudo podman tag microshift-okd \
            ghcr.io/${{ github.repository }}:${VERSION} \
            ghcr.io/${{ github.repository }}:latest
          sudo podman push --authfile /tmp/ghcr-auth.json ghcr.io/${{ github.repository }}:${VERSION}
          sudo podman push --authfile /tmp/ghcr-auth.json ghcr.io/${{ github.repository }}:latest

          # Prepare the release note for the bootc image usage
          VERSION="${VERSION}" \
          COPR_REPO_NAME="${{ inputs.copr-repo }}" \
          envsubst < .github/workflows/release.md > /tmp/release.md
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Add release note for bootc image usage
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.publish-bootc-image.outputs.version }}
          body_path: /tmp/release.md
