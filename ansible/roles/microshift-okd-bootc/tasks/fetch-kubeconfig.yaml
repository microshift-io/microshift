
# --- Tasks to download kubeconfig from the MicroShift container ---
---
- name: Define kubeconfig paths
  ansible.builtin.set_fact:
    _kubeconfig_container_src_path: "/var/lib/microshift/resources/kubeadmin/{{ ansible_host }}/kubeconfig"
    _kubeconfig_remote_tmp_path: "/tmp/kubeconfig_{{ ansible_host }}"
    _kubeconfig_local_dest_dir: "{{ playbook_dir | default('.') }}/fetched_kubeconfigs" # Default to current dir if playbook_dir is not set

- name: Ensure local destination directory for kubeconfig exists
  ansible.builtin.file:
    path: "{{ _kubeconfig_local_dest_dir }}"
    state: directory
    mode: '0755'
  delegate_to: localhost
  become: false # Ensure this runs as the original user on localhost
  run_once: true # Only create the directory once if running against multiple hosts

- name: Copy kubeconfig from container to remote host's temporary location
  ansible.builtin.command:
    cmd: "podman cp microshift-okd:{{ _kubeconfig_container_src_path }} {{ _kubeconfig_remote_tmp_path }}"
  become: true
  register: _podman_cp_result
  changed_when: _podman_cp_result.rc == 0
  failed_when: _podman_cp_result.rc != 0 and "No such container" not in _podman_cp_result.stderr and "No such file or directory" not in _podman_cp_result.stderr
  # Allow to proceed if file/container not found, but fetch will fail later if so.
  # More robust error handling might be needed based on exact requirements.

- name: Fetch kubeconfig from remote host to localhost
  ansible.builtin.fetch:
    src: "{{ _kubeconfig_remote_tmp_path }}"
    dest: "{{ _kubeconfig_local_dest_dir }}/kubeconfig"
    flat: yes
  become: true # May be needed if the tmp file requires root to read
  when: _podman_cp_result.rc == 0 # Only attempt fetch if copy succeeded

- name: Print KUBECONFIG
  debug:
    msg: "export KUBECONFIG={{ _kubeconfig_local_dest_dir }}/kubeconfig"

- name: Remove temporary kubeconfig from remote host
  ansible.builtin.file:
    path: "{{ _kubeconfig_remote_tmp_path }}"
    state: absent
  become: true
  when: _podman_cp_result.rc == 0 # Only attempt delete if copy succeeded